{"version":3,"sources":["components/DigitalTimer/index.js","App.js","index.js"],"names":["DigitalTimer","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","state","timerValue","minutes","secoends","isTimerRunning","onClickStartBtn","setState","onDecrement","_this$state","prevState","onIncrement","onResetBtnClick","onTimerStart","_this$state2","componentWillUnmount","_inherits","_createClass","key","value","this","timerid","setInterval","clearInterval","_this$state3","_jsxs","className","children","_jsx","onClick","type","alt","src","Component","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00f4da3f.chunk.js","sourcesContent":["// Write your code here\nimport {Component} from 'react'\nimport './index.css'\n\nclass DigitalTimer extends Component {\n  state = {\n    timerValue: 25,\n    minutes: 25,\n    secoends: 0,\n    isTimerRunning: false,\n  }\n\n  componentDidMount() {\n    const {minutes} = this.state\n    if (minutes > 0) {\n      this.timerid = setInterval(this.onTimerStart, 1000)\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerid)\n    this.setState({secoends: 0})\n  }\n\n  onClickStartBtn = () => {\n    const {isTimerRunning} = this.state\n    this.setState({isTimerRunning: !isTimerRunning})\n  }\n\n  onDecrement = () => {\n    const {isTimerRunning, minutes} = this.state\n\n    if (isTimerRunning === false && minutes > 0) {\n      this.setState(prevState => ({\n        timerValue: prevState.timerValue - 1,\n        minutes: prevState.minutes - 1,\n      }))\n    }\n  }\n\n  onIncrement = () => {\n    const {isTimerRunning} = this.state\n\n    if (isTimerRunning === false) {\n      this.setState(prevState => ({\n        timerValue: prevState.timerValue + 1,\n        minutes: prevState.minutes + 1,\n      }))\n    }\n  }\n\n  onResetBtnClick = () => {\n    const {timerValue} = this.state\n    this.setState({isTimerRunning: false, secoends: 0, minutes: timerValue})\n  }\n\n  onTimerStart = () => {\n    const {isTimerRunning, secoends, minutes, timerValue} = this.state\n\n    if (minutes === 0 && secoends === 2) {\n      this.componentWillUnmount()\n      this.setState({isTimerRunning: false, minutes: timerValue, secoends: 0})\n    }\n\n    if (isTimerRunning === true && secoends === 0 && minutes > -1) {\n      this.setState(prevState => ({\n        secoends: 60,\n        minutes: prevState.minutes - 1,\n      }))\n    }\n\n    if (isTimerRunning === true && minutes > -1) {\n      this.setState(prevState => ({secoends: prevState.secoends - 1}))\n    }\n  }\n\n  render() {\n    const {isTimerRunning, secoends, timerValue, minutes} = this.state\n\n    return (\n      <div className=\"bg\">\n        <h1 className=\"head\">Digital Timer</h1>\n        <div className=\"bg-2\">\n          <div className=\"timer-container\">\n            <div className=\"timer\">\n              <h1 className=\"timer-count\">\n                {minutes < 10 ? `0${minutes}` : `${minutes}`}:\n                {secoends < 10 ? `0${secoends}` : `${secoends}`}\n              </h1>\n              <p className=\"timer-para\">\n                {' '}\n                {isTimerRunning ? 'Running' : 'Paused'}\n              </p>\n            </div>\n          </div>\n          <div className=\"controls-container\">\n            <div className=\"control-butoon-container\">\n              <button\n                onClick={this.onClickStartBtn}\n                className=\"control-button\"\n                type=\"button\"\n              >\n                <img\n                  className=\"control-img\"\n                  alt={isTimerRunning ? 'pause icon' : 'play icon'}\n                  src={\n                    isTimerRunning\n                      ? 'https://assets.ccbp.in/frontend/react-js/pause-icon-img.png'\n                      : 'https://assets.ccbp.in/frontend/react-js/play-icon-img.png '\n                  }\n                />\n                {isTimerRunning ? 'Pause' : 'Start'}\n              </button>\n              <button\n                onClick={this.onResetBtnClick}\n                className=\"control-button\"\n                type=\"button\"\n              >\n                <img\n                  className=\"control-img\"\n                  alt=\"reset icon\"\n                  src=\"https://assets.ccbp.in/frontend/react-js/reset-icon-img.png \"\n                />\n                Reset\n              </button>\n            </div>\n            <p className=\"ic-para\">Set Timer limit</p>\n            <div className=\"iccontainer\">\n              <button\n                onClick={this.onDecrement}\n                className=\"ic-btn\"\n                type=\"button\"\n              >\n                -\n              </button>\n              <p className=\"count-Info\">{timerValue}</p>\n              <button\n                onClick={this.onIncrement}\n                className=\"ic-btn\"\n                type=\"button\"\n              >\n                +\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DigitalTimer\n","import DigitalTimer from './components/DigitalTimer'\n\nimport './App.css'\n\nconst App = () => <DigitalTimer />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}